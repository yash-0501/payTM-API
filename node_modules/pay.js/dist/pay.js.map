{"version":3,"file":"pay.js","sources":["../src/Tax/Utils/TaxBandCalculator.js","../src/Tax/Income/IncomeTaxCalculator.js","../src/Tax/Income/NationalInsuranceCalculator.js","../src/Tax/data/2015-16/it.js","../src/Tax/data/2015-16/ni.js","../src/Tax/data/2015-16/index.js","../src/Tax/index.js","../src/pay.js"],"sourcesContent":["\nclass TaxBandCalculator {\n\n    /**\n     * Instantiate the Class\n     *\n     * @param  {Object}  options\n     */\n    constructor (options) {\n        this.opts = options;\n    }\n\n    /**\n     * Get the gross annual income\n     *\n     * @return  {Number}\n     */\n    get gross () {\n        return this.opts.gross;\n    }\n\n    /**\n     * Get the gross annual income\n     *\n     * @param  {Number}  amount\n     */\n    set gross (amount) {\n        this.opts.gross = amount;\n    }\n\n    /**\n     * Get the net annual income\n     *\n     * @return  {Number}\n     */\n    get net () {\n        return this.gross - this.calculateAnnual();\n    }\n\n    /**\n     * Get the total taxable amount from the gross amount.\n     * Defaults to the total gross amount.\n     *\n     * @return {Number}\n     */\n    getTotalTaxable () {\n        return this.gross;\n    }\n\n    /**\n     * Calculate how much tax is to be paid for a particular tax band\n     *\n     * @param  {Number}  amount\n     * @param  {Object}  band\n     *\n     * @return {Number}\n     */\n    calculateTaxForBand (amount, band) {\n        if (amount < band.min) return 0;\n\n        // return the flat rate if one is set\n        if (typeof band.flat !== 'undefined') return band.rate;\n\n        return (amount - band.min) * band.rate;\n    }\n\n    /**\n     * Calculate the amount of annual Tax given the gross income\n     *\n     * @return {Number}\n     */\n    calculateAnnual () {\n        let total = 0,\n            taxable = this.getTotalTaxable();\n\n        for (let i = this.opts.bands.length - 1; i >= 0; i--) {\n            let band = this.opts.bands[i],\n                amount = this.calculateTaxForBand(taxable, band);\n\n            total += amount;\n\n            if (amount > 0) taxable = band.min;\n        }\n\n        return total;\n    }\n\n    /**\n     * Calculate the amount of monthly Tax given the gross income\n     *\n     * @return  {Number}\n     */\n    calculateMonthly () {\n        return this.calculateAnnual() / 12;\n    }\n\n}\n\nexport default TaxBandCalculator;\n","import TaxBandCalculator from '../Utils/TaxBandCalculator';\n\nclass IncomeTaxCalculator extends TaxBandCalculator {\n\n    constructor (gross, data) {\n        super({ gross, bands: data.INCOME_TAX_BANDS });\n        this.gross = gross;\n        this.data = data;\n    }\n\n    /**\n     * Override the total taxable amount for income tax specifically\n     *\n     * @return {Number}\n     */\n    getTotalTaxable () {\n        if (this.gross < this.data.TAX_FREE_ALLOWANCE_LIMIT) {\n            let taxable = this.gross - this.data.TAX_FREE_ALLOWANCE;\n\n            return taxable < 0 ? 0 : taxable;\n        } else if (this.gross < this.data.TAX_FREE_ALLOWANCE_UPPER_LIMIT) {\n            let amountOver = this.gross - this.data.TAX_FREE_ALLOWANCE_LIMIT,\n                adjustedTFA = this.data.TAX_FREE_ALLOWANCE - (amountOver * this.data.TAX_FREE_ALLOWANCE_LIMIT_RATE);\n\n            return this.gross - adjustedTFA;\n        }\n\n        return this.gross;\n    }\n\n}\n\nexport default IncomeTaxCalculator;\n","import TaxBandCalculator from '../Utils/TaxBandCalculator';\n\nclass NationalInsuranceCalculator extends TaxBandCalculator {\n\n    constructor (gross, selfEmployed = false, data) {\n        super({ gross, bands: selfEmployed ? data.NI_BANDS_SE : data.NI_BANDS });\n        this.gross = gross;\n    }\n\n}\n\nexport default NationalInsuranceCalculator;\n","export default {\n\n    /**\n     * The value that can be earned before paying any tax\n     *\n     * @type {Integer}\n     */\n    TAX_FREE_ALLOWANCE: 10600,\n\n    /**\n     * The amount at which the tax free allowance is reduced\n     *\n     * @type {Integer}\n     */\n    TAX_FREE_ALLOWANCE_LIMIT: 100000,\n\n    /**\n     * The amount at which the tax free allowance is removed\n     *\n     * @type {Integer}\n     */\n    TAX_FREE_ALLOWANCE_UPPER_LIMIT: 121200,\n\n    /**\n     * The rate to apply to the tax free allowance when it reaches the\n     * threshold\n     *\n     * @type {Number}\n     */\n    TAX_FREE_ALLOWANCE_LIMIT_RATE: 0.5,\n\n    /**\n     * The various tax bands\n     *\n     * @type {Array}\n     */\n    INCOME_TAX_BANDS: [\n        { min: 0, rate: 0.2 }, // Basic rate\n        { min: 31786, rate: 0.4 }, // Higher Rate\n        { min: 150000, rate: 0.45 } // Additional Rate\n    ]\n};\n","export default {\n\n    /**\n     * Define the rates for Class 1 contributions\n     *\n     * @type {Array}\n     */\n    NI_BANDS: [\n        { min: 0, rate: 0 },\n        { min: 8060, rate: 0.12 },\n        { min: 42386, rate: 0.02 }\n    ],\n\n    /**\n     * Define the rates for Class 2 and 4 contributions\n     *\n     * @type {Array}\n     */\n    NI_BANDS_SE: [\n        { min: 0, rate: 0 },\n        { min: 5965, rate: 145.6, flat: true }, // Class 2 flat rate\n        { min: 8060, rate: 0.09 }, // Class 4 onwards\n        { min: 42386, rate: 0.02 }\n    ]\n};\n","import incomeTaxData from './it';\nimport nationalInsuranceData from './ni';\n\nexport default {\n    incomeTaxData,\n    nationalInsuranceData\n};\n","import IncomeTaxCalculator from './Income/IncomeTaxCalculator';\nimport NationalInsuranceCalculator from './Income/NationalInsuranceCalculator';\nimport data from './data/2015-16';\n\nclass Tax {\n\n    constructor (amount) {\n        this.amount = amount;\n    }\n\n    incomeTax () {\n        return new IncomeTaxCalculator(this.amount, data.incomeTaxData);\n    }\n\n    nationalInsurance (selfEmployed = false) {\n        return new NationalInsuranceCalculator(this.amount, selfEmployed, data.nationalInsuranceData);\n    }\n\n}\n\nexport default Tax;\n","import Tax from './Tax';\n\nclass Pay {\n\n    static tax (options) {\n        return new Tax(options);\n    }\n\n}\n\nexport default Pay;\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MACM;;;;;;;;AAOF,EAAA,aAPE,iBAOF,CAAa,OAAb,EAAsB;4CAPpB,mBAOoB;;AAClB,EAAA,aAAK,IAAL,GAAY,OAAZ,CADkB;OAAtB;;;;;;;;;+BAPE;;;;;;;;;;4CA4CiB;AACf,EAAA,mBAAO,KAAK,KAAL,CADQ;;;;;;;;;;;;;;8CAYE,QAAQ,MAAM;AAC/B,EAAA,gBAAI,SAAS,KAAK,GAAL,EAAU,OAAO,CAAP,CAAvB;;;AAD+B,EAAA,gBAI3B,OAAO,KAAK,IAAL,KAAc,WAArB,EAAkC,OAAO,KAAK,IAAL,CAA7C;;AAEA,EAAA,mBAAO,CAAC,SAAS,KAAK,GAAL,CAAV,GAAsB,KAAK,IAAL,CANE;;;;;;;;;;;4CAchB;AACf,EAAA,gBAAI,QAAQ,CAAR;kBACA,UAAU,KAAK,eAAL,EAAV,CAFW;;AAIf,EAAA,iBAAK,IAAI,IAAI,KAAK,IAAL,CAAU,KAAV,CAAgB,MAAhB,GAAyB,CAAzB,EAA4B,KAAK,CAAL,EAAQ,GAAjD,EAAsD;AAClD,EAAA,oBAAI,OAAO,KAAK,IAAL,CAAU,KAAV,CAAgB,CAAhB,CAAP;sBACA,SAAS,KAAK,mBAAL,CAAyB,OAAzB,EAAkC,IAAlC,CAAT,CAF8C;;AAIlD,EAAA,yBAAS,MAAT,CAJkD;;AAMlD,EAAA,oBAAI,SAAS,CAAT,EAAY,UAAU,KAAK,GAAL,CAA1B;eANJ;;AASA,EAAA,mBAAO,KAAP,CAbe;;;;;;;;;;;6CAqBC;AAChB,EAAA,mBAAO,KAAK,eAAL,KAAyB,EAAzB,CADS;;;;8BA3EP;AACT,EAAA,mBAAO,KAAK,IAAL,CAAU,KAAV,CADE;;;;;;;;;4BASF,QAAQ;AACf,EAAA,iBAAK,IAAL,CAAU,KAAV,GAAkB,MAAlB,CADe;;;;;;;;;;;8BASR;AACP,EAAA,mBAAO,KAAK,KAAL,GAAa,KAAK,eAAL,EAAb,CADA;;;aAlCT;;;MCCA;;;AAEF,EAAA,aAFE,mBAEF,CAAa,KAAb,EAAoB,IAApB,EAA0B;4CAFxB,qBAEwB;;yFAFxB,gCAGQ,EAAE,YAAF,EAAS,OAAO,KAAK,gBAAL,KADA;;AAEtB,EAAA,cAAK,KAAL,GAAa,KAAb,CAFsB;AAGtB,EAAA,cAAK,IAAL,GAAY,IAAZ,CAHsB;;OAA1B;;;;;;;;;+BAFE;;4CAaiB;AACf,EAAA,gBAAI,KAAK,KAAL,GAAa,KAAK,IAAL,CAAU,wBAAV,EAAoC;AACjD,EAAA,oBAAI,UAAU,KAAK,KAAL,GAAa,KAAK,IAAL,CAAU,kBAAV,CADsB;;AAGjD,EAAA,uBAAO,UAAU,CAAV,GAAc,CAAd,GAAkB,OAAlB,CAH0C;eAArD,MAIO,IAAI,KAAK,KAAL,GAAa,KAAK,IAAL,CAAU,8BAAV,EAA0C;AAC9D,EAAA,oBAAI,aAAa,KAAK,KAAL,GAAa,KAAK,IAAL,CAAU,wBAAV;sBAC1B,cAAc,KAAK,IAAL,CAAU,kBAAV,GAAgC,aAAa,KAAK,IAAL,CAAU,6BAAV,CAFD;;AAI9D,EAAA,uBAAO,KAAK,KAAL,GAAa,WAAb,CAJuD;eAA3D;;AAOP,EAAA,mBAAO,KAAK,KAAL,CAZQ;;;aAbjB;IAA4B;;MCA5B;;;AAEF,EAAA,aAFE,2BAEF,CAAa,KAAb,EAAgD;cAA5B,qEAAe,qBAAa;cAAN,oBAAM;4CAF9C,6BAE8C;;yFAF9C,wCAGQ,EAAE,YAAF,EAAS,OAAO,eAAe,KAAK,WAAL,GAAmB,KAAK,QAAL,KADZ;;AAE5C,EAAA,cAAK,KAAL,GAAa,KAAb,CAF4C;;OAAhD;;aAFE;IAAoC;;sBCF3B;;;;;;;AAOX,EAAA,sBAAoB,KAApB;;;;;;;AAOA,EAAA,4BAA0B,MAA1B;;;;;;;AAOA,EAAA,kCAAgC,MAAhC;;;;;;;;AAQA,EAAA,iCAA+B,GAA/B;;;;;;;AAOA,EAAA,oBAAkB,CACd,EAAE,KAAK,CAAL,EAAQ,MAAM,GAAN,EADI;AAEd,EAAA,IAAE,KAAK,KAAL,EAAY,MAAM,GAAN,EAFA;AAGd,EAAA,IAAE,KAAK,MAAL,EAAa,MAAM,IAAN;AAHD,EAAA,GAAlB;GApCJ;;8BCAe;;;;;;;AAOX,EAAA,cAAU,CACN,EAAE,KAAK,CAAL,EAAQ,MAAM,CAAN,EADJ,EAEN,EAAE,KAAK,IAAL,EAAW,MAAM,IAAN,EAFP,EAGN,EAAE,KAAK,KAAL,EAAY,MAAM,IAAN,EAHR,CAAV;;;;;;;AAWA,EAAA,iBAAa,CACT,EAAE,KAAK,CAAL,EAAQ,MAAM,CAAN,EADD,EAET,EAAE,KAAK,IAAL,EAAW,MAAM,KAAN,EAAa,MAAM,IAAN,EAFjB;AAGT,EAAA,MAAE,KAAK,IAAL,EAAW,MAAM,IAAN,EAHJ;AAIT,EAAA,MAAE,KAAK,KAAL,EAAY,MAAM,IAAN,EAJL,CAAb;GAlBJ;;aCGe;AACX,EAAA,gCADW;AAEX,EAAA,gDAFW;GAAf;;MCCM;AAEF,EAAA,aAFE,GAEF,CAAa,MAAb,EAAqB;4CAFnB,KAEmB;;AACjB,EAAA,aAAK,MAAL,GAAc,MAAd,CADiB;OAArB;;+BAFE;;sCAMW;AACT,EAAA,mBAAO,IAAI,mBAAJ,CAAwB,KAAK,MAAL,EAAa,KAAK,aAAL,CAA5C,CADS;;;;8CAI4B;kBAAtB,qEAAe,qBAAO;;AACrC,EAAA,mBAAO,IAAI,2BAAJ,CAAgC,KAAK,MAAL,EAAa,YAA7C,EAA2D,KAAK,qBAAL,CAAlE,CADqC;;;aAVvC;;;MCFA;;;;;;;8BAEU,SAAS;AACjB,EAAA,mBAAO,IAAI,GAAJ,CAAQ,OAAR,CAAP,CADiB;;;aAFnB;;;;;"}